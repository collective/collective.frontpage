[buildout]
extends =
    http://dist.plone.org/release/5.2.0/versions.cfg
    versions.cfg
show-picked-versions = false
extensions = mr.developer

parts =
    instance

develop = .
languages = de


[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
http-address = 8080
environment-vars = zope_i18n_compile_mo_files true
eggs =
    Plone
    Pillow
    Products.CMFPlone
    collective.frontpage [test]


[code-analysis]
recipe = plone.recipe.codeanalysis[recommended]
directory = ${buildout:directory}/src/collective
multiprocessing = True

chameleon-lint = False
xmllint = True

# Integration
return-status-codes = True

# TODO: i18n - Enable on Frontpage Localization
find-untranslated = False
i18ndude-bin = ${buildout:bin-directory}/i18ndude

# Flake8
flake8 = True
flake8-ignore = E123, C815, P001, W503, Q000, I001, C812
flake8-exclude = bootstrap.py,bootstrap-buildout.py,docs,*.egg,*.cpy,*.vpy,overrides,omelette

flake8-max-complexity = 15
# Black Default Line-Length
flake8-max-line-length = 88

# Flake8 - Plugins
# https://github.com/plone/plone.recipe.codeanalysis#recommended-extra
flake8-extensions =
    flake8-coding
    flake8-debugger
    flake8-plone-api

# Flake8 Extensions

# flake8-blind-except
# flake8-coding
# flake8-debugger
# flake8-deprecated
# flake8-isort
# flake8-pep3101
# flake8-plone-api
# flake8-plone-hasattr
# flake8-print
# flake8-quotes
# flake8-string-format
# flake8-todo
# flake8-commas

# Git Commit
pre-commit-hook = True
pre-commit-hook-return-status-codes = True

# Git Push
pre-push-hook = False
pre-push-hook-return-status-codes = False


[coverage]
recipe = zc.recipe.egg
eggs = coverage


[createcoverage]
recipe = zc.recipe.egg
eggs = createcoverage


[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}


[test]
recipe = zc.recipe.testrunner
eggs = ${instance:eggs}
       plonetheme.tokyo
initialization =
    os.environ['TZ'] = 'UTC'
defaults = ['-s', 'collective.frontpage', '--auto-color', '--auto-progress']


[test-coverage]
recipe = collective.recipe.template
input = inline:
    #!/bin/bash
    export TZ=UTC
    ${buildout:directory}/bin/coverage run bin/test $*
    ${buildout:directory}/bin/coverage html
    ${buildout:directory}/bin/coverage report -m --fail-under=90
output = ${buildout:directory}/bin/test-coverage
mode = 755


[robot]
recipe = zc.recipe.egg
eggs =
    Pillow
    ${test:eggs}
    plone.app.robotframework[debug,ride,reload]
scripts =
    robot-server
    robot


[releaser]
recipe = zc.recipe.egg
eggs = zest.releaser


[i18ndude]
recipe = zc.recipe.egg
eggs = i18ndude


[i18nize-webapp]
recipe = collective.recipe.template
input = ${buildout:directory}/templates/i18nize.in
output = ${buildout:bin-directory}/i18nize-webapp
mode = 775
dollar = $
domain = collective.frontpage
packagepath = ${buildout:directory}/src/collective/frontpage
languages = ${buildout:languages}
